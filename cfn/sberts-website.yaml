AWSTemplateFormatVersion: '2010-09-09'
Description: Deploy React Web App from a private GitHub repository

Parameters:
  GitHubToken:
    Type: String
    Description: GitHub token for accessing the repository
    Default: githubtoken

  HostedZoneId:
    Type: String
    Description: The ID of the existing Route 53 Hosted Zone
    Default: Z24TPBHU3GV1XI

  CertificateId:
    Type: String
    Description: The ID of the existing ACM certificate
    Default: bdea5efb-db5b-441b-8a58-9526deb878b4

  RepoURL:
    Type: String
    Description: The URL of the GitHub repository
    Default: https://github.com/sberts/sberts-website.git
Resources:

  S3BucketMain:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: sberts-website
      AccessControl: Private

  BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref S3BucketMain
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: "cloudfront.amazonaws.com"
            Action: 's3:GetObject'
            Resource: !Sub arn:aws:s3:::${S3BucketMain}/*
            Condition:
              StringEquals:
                AWS:SourceArn: !Sub
                  - arn:aws:cloudfront::${AWS::AccountId}:distribution/${DistId}
                  - DistId: !GetAtt CloudFrontDistribution.Id

  DNSRecordMain:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: www.megalopolis.city
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2  # CloudFront hosted zone ID
        DNSName: !GetAtt [CloudFrontDistribution, DomainName]

  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [codebuild.amazonaws.com]
            Action: ['sts:AssumeRole']
      Policies:
        - PolicyName: CodeBuildPolicy
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: ['s3:*', 'logs:*', 'secretsmanager:GetSecretValue']
                Resource: '*'

  CodeBuildSourceCredential:
    Type: AWS::CodeBuild::SourceCredential
    Properties:
      AuthType: PERSONAL_ACCESS_TOKEN
      ServerType: GITHUB
      Token: !Sub "{{resolve:secretsmanager:${GitHubToken}:SecretString:OAuthToken}}"


  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: CityBuild
      Source:
        Type: GITHUB
        Location: !Ref RepoURL
        Auth:
          Type: OAUTH
          Resource: !Ref CodeBuildSourceCredential
      Environment:
        Type: LINUX_CONTAINER
        Image: aws/codebuild/standard:4.0
        ComputeType: BUILD_GENERAL1_SMALL
        EnvironmentVariables:
          - Name: S3_BUCKET_MAIN
            Value: !Ref S3BucketMain
          # - Name: S3_BUCKET_DEV
          #   Value: !Ref S3BucketDev
      Artifacts:
        Type: NO_ARTIFACTS
      ServiceRole: !Ref CodeBuildRole

  CloudFrontOriginAccessControl:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Description: "origin access control(OAC) for allowing cloudfront to access S3 bucket"
        Name: m10city-main-OAC
        OriginAccessControlOriginType: s3
        SigningBehavior: always
        SigningProtocol: sigv4

  CloudFrontOriginIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: "origin identity"

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - S3BucketMain
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !Sub ${S3BucketMain}.s3.us-west-2.amazonaws.com
            Id: static-hosting
            S3OriginConfig:
              OriginAccessIdentity: ""
            OriginAccessControlId: !GetAtt CloudFrontOriginAccessControl.Id
        Enabled: "true"
        DefaultRootObject: index.html
        CustomErrorResponses:
          - ErrorCode: 404
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 403
            ResponseCode: 200
            ResponsePagePath: /index.html
        HttpVersion: http2
        Aliases:
          - www.megalopolis.city
        ViewerCertificate:
          AcmCertificateArn: !Sub arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/${CertificateId}
          MinimumProtocolVersion: TLSv1.2_2021
          SslSupportMethod: sni-only
        DefaultCacheBehavior:
          AllowedMethods:
            - DELETE
            - GET
            - HEAD
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          TargetOriginId: static-hosting
          ForwardedValues:
            QueryString: "false"
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https

Outputs:
  S3BucketMainOutput:
    Value: !Ref S3BucketMain
    Description: Name of the S3 bucket for main environment

  CloudFrontURLMain:
    Value: !GetAtt [CloudFrontDistribution, DomainName]
    Description: URL of the CloudFront distribution for the main environment
